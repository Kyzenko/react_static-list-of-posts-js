{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","name","email","className","href","CommentInfo","comment","body","CommentList","comments","map","id","PostInfo","post","title","length","PostList","posts","getCommentById","userId","commentsFromServer","filter","postId","postsFromServer","usersFromServer","find","App","ReactDOM","render","document","getElementById"],"mappings":"018IAEaA,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MAEd,OACE,8BACG,eAED,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,GAAxC,SACGD,QCVII,G,MAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBL,EAAsBK,EAAtBL,KAAMC,EAAgBI,EAAhBJ,MAAOK,EAASD,EAATC,KAErB,OACE,sBAAKJ,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCF,IAEvC,+BAAO,SAEP,mBACEE,UAAU,qBACVC,KAAI,iBAAYF,GAFlB,SAIGA,OAIL,qBAAKC,UAAU,oBAAf,SACGI,SChBIC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKN,UAAU,cAAf,SACGM,EAASC,KAAI,SAAAJ,GAAO,OACnB,cAAC,EAAD,CACEA,QAASA,GACJA,EAAQK,UCJRC,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAAgCD,EAAhCC,MAAOP,EAAyBM,EAAzBN,KAAMP,EAAmBa,EAAnBb,KAAMS,EAAaI,EAAbJ,SAE3B,OACE,sBAAKN,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCW,IAEhCd,EACG,cAAC,EAAD,CAAUA,KAAMA,IAChB,oDAIN,mBAAGG,UAAU,iBAAb,SACGI,IAGDE,EAASM,OAEP,cAAC,EAAD,CAAaN,SAAUA,IADvB,mBAAG,UAAQ,oBAAX,6BAIJ,2BCzBOO,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKd,UAAU,WAAf,SACGc,EAAMP,KAAI,SAAAG,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKF,UCKtC,SAASO,EAAeC,GACtB,OAAOC,EAAmBC,QAAO,SAAAf,GAAO,OAAIA,EAAQgB,SAAWH,KAGjE,IAAMF,EAAQM,EAAgBb,KAAI,SAAAG,GAAI,kCACjCA,GADiC,IAEpCb,MAVmBmB,EAUDN,EAAKM,OAThBK,EAAgBC,MAAK,SAAAzB,GAAI,OAAIA,EAAKW,KAAOQ,MAUhDV,SAAUS,EAAeL,EAAKF,MAXhC,IAAqBQ,KAcRO,EAAM,kBACjB,0BAASvB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUc,MAAOA,QCnBrBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bcf45816.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <p>\n      {' Posted by  '}\n\n      <a className=\"UserInfo\" href={`mailto:${email}`}>\n        {name}\n      </a>\n    </p>\n  );\n};\n","export const CommentInfo = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n\n        <span>{' by '}</span>\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo\n        comment={comment}\n        key={comment.id}\n      />\n    ))}\n\n  </div>\n);\n","import './PostInfo.scss';\nimport { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\n\nexport const PostInfo = ({ post }) => {\n  const { title, body, user, comments } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{title}</h3>\n\n        {user\n          ? <UserInfo user={user} />\n          : <p>user not founded</p>\n        }\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      {!comments.length\n        ? <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n        : <CommentList comments={comments} />\n      }\n\n      <hr />\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n\n  </div>\n);\n","import './App.scss';\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId);\n}\n\nfunction getCommentById(userId) {\n  return commentsFromServer.filter(comment => comment.postId === userId);\n}\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}